{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Swedenborg Concordance",
	"patterns": [
		{
			"include": "#invalid"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#references"
		},
		{
			"include": "#principal_phrases"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.problem.swconcord",
					"match": "(?i)(#problem)( .*)",
					"captures": {
						"1": {
							"name": "comment.problem.keyword.swconcord"
						},
						"2": {
							"name": "comment.problem.description.swconcord"
						}
					}
				},
				{
					"name": "comment.control.swconcord",
					"match": "#.*"
				}
			]
		},
		"references": {
			"patterns": [
				{
					"name": "ref.abbrev.swconcord",
					"match": "@(5M|9Q|AC|AE|AR|Ath|BE|CL|CanonsNC|Char|ConvAng|Coro|DFaith|DLW|DLife|DLord|DLove|DMin|DP|DSS|DWis|DeConj|DeConsum|DeDeoSalv|DeDomino|DeInfluxus|DeJust|DeMiraculis|DeVerbo|Dicta Probantia|Docu|EU|EccHist|HH|HistCrea|ISB|Inv|LJCont|LJPost|LJ|Letters|NJHD|PP|SE|SciaDoc|TCR|WE|WHApp|WH)"
				},
				{
					"name": "ref.section.swconcord",
					"match": "^@\\d+(\\.| |\\[\\d+\\]|\\[end\\])"
				},
				{
					"name": "ref.section.previous.swconcord",
					"match": "^@--(\\[\\d+\\]|\\[end\\])?(\\.| )"
				}
			]
		},
		"principal_phrases": {
			"patterns": [
				{
					"name": "principal.phrase.line.swconcord",
					"match": "^[^@].*$"
				}
			]
		},
		"invalid": {
			"patterns": [
				{
					"name": "invalid.ref.swconcord",
					"match": "@(?!(--|\\d+|5M|9Q|AC|AE|AR|Ath|BE|CL|CanonsNC|Char|ConvAng|Coro|DFaith|DLW|DLife|DLord|DLove|DMin|DP|DSS|DWis|DeConj|DeConsum|DeDeoSalv|DeDomino|DeInfluxus|DeJust|DeMiraculis|DeVerbo|Dicta Probantia|Docu|EU|EccHist|HH|HistCrea|ISB|Inv|LJCont|LJPost|LJ|Letters|NJHD|PP|SE|SciaDoc|TCR|WE|WHApp|WH))\\w+"
				},
				{
					"name": "invalid.char.unknown.swconcord",
					"match": "%"
				},
				{
					"name": "invalid.char.after.at.sign.swconcord",
					"match": "@(?!\\w|-)"
				},
				{
					"name": "invalid.ref.section.swconcord",
					"match": "@\\d+(?!(\\.| |\\[)|\\d)"
				},
				{
					"name": "invalid.subsection.empty.swconcord",
					"match": "\\[\\]"
				},
				{
					"name": "invalid.subsection.too.large.swconcord",
					"match": "\\[\\d{3}\\]"
				},
				{
					"name": "invalid.non.digit.before.digit.swconcord",
					"match": "[^ @\\d:\\(\\[]\\d+"
				},
				{
					"name": "invalid.non.digit.after.digit.swconcord",
					"match": "\\d+[^\\d\\.,:K \\[\\]\\)]"
				},
				{
					"name": "invalid.letter.unexpected.swconcord",
					"match": "(\\)\\w)|(\\w\\()|(\\?\\w)"
				}
			]
		}
	},
	"scopeName": "source.swconcord"
}